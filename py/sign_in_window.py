# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'sign-in_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_SigninWindow(object):

    def home_btn(self):

        from main_window import Ui_MainWindow
        self.MainWindow = QtWidgets.QMainWindow()
        self.ui = Ui_MainWindow()
        self.ui.setupUi(self.MainWindow)
        self.MainWindow.show()

    def sign_in_success(self):

        from sign_in_dialogue_window import Ui_sign_in_dialogue_window
        self.sign_in_dialogue_window = QtWidgets.QMainWindow()
        self.ui = Ui_sign_in_dialogue_window()
        self.ui.setupUi(self.sign_in_dialogue_window)
        self.sign_in_dialogue_window.show()

    def setupUi(self, SigninWindow):
        SigninWindow.setObjectName("SigninWindow")
        SigninWindow.resize(1210, 588)
        SigninWindow.setStyleSheet("background-color:white;")
        self.centralwidget = QtWidgets.QWidget(SigninWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.verticalWidget = QtWidgets.QWidget(self.centralwidget)
        self.verticalWidget.setMinimumSize(QtCore.QSize(1192, 570))
        self.verticalWidget.setMaximumSize(QtCore.QSize(1192, 570))
        self.verticalWidget.setObjectName("verticalWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalWidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.sign_in_title = QtWidgets.QLabel(self.verticalWidget)
        self.sign_in_title.setStyleSheet(
            "QLabel {\n"
            "    background-color:#6c63ff;\n"
            "    font: 22pt \"Eras Medium ITC\";\n"
            "    color:white;\n"
            "\n"
            "    }\n"
            "")
        self.sign_in_title.setObjectName("sign_in_title")
        self.verticalLayout.addWidget(self.sign_in_title)
        self.horizontalWidget = QtWidgets.QWidget(self.verticalWidget)
        self.horizontalWidget.setObjectName("horizontalWidget")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.horizontalWidget)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label = QtWidgets.QLabel(self.horizontalWidget)
        self.label.setMinimumSize(QtCore.QSize(650, 450))
        self.label.setMaximumSize(QtCore.QSize(650, 450))
        self.label.setStyleSheet(
            "background-image: url(:/sign_in/undraw_Sign_in_re_o58h.png);")
        self.label.setText("")
        self.label.setPixmap(
            QtGui.QPixmap(":/signin/undraw_Sign_in_re_o58h.png"))
        self.label.setScaledContents(True)
        self.label.setObjectName("label")
        self.horizontalLayout_2.addWidget(self.label)
        self.verticalWidget1 = QtWidgets.QWidget(self.horizontalWidget)
        self.verticalWidget1.setMinimumSize(QtCore.QSize(423, 450))
        self.verticalWidget1.setMaximumSize(QtCore.QSize(423, 450))
        self.verticalWidget1.setObjectName("verticalWidget1")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.verticalWidget1)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.gridWidget = QtWidgets.QWidget(self.verticalWidget1)
        self.gridWidget.setMinimumSize(QtCore.QSize(421, 301))
        self.gridWidget.setMaximumSize(QtCore.QSize(421, 301))
        self.gridWidget.setObjectName("gridWidget")
        self.gridLayout_4 = QtWidgets.QGridLayout(self.gridWidget)
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.input_email = QtWidgets.QLineEdit(self.gridWidget)
        self.input_email.setMinimumSize(QtCore.QSize(400, 50))
        self.input_email.setMaximumSize(QtCore.QSize(400, 50))
        self.input_email.setStyleSheet("QLineEdit {\n"
                                       "        padding-left:10px;\n"
                                       "    background-color:white;\n"
                                       "    font: 9pt \"Eras Medium ITC\";\n"
                                       "    color:2f2e41;\n"
                                       "    border-style: solid;\n"
                                       "    border-width: 2px;\n"
                                       "    border-radius: 10px;\n"
                                       "    border-color:#cccccc;\n"
                                       "\n"
                                       "    }\n"
                                       "\n"
                                       "QLineEdit:focus {\n"
                                       "    border-color:#2f2e41;\n"
                                       "    border-style:solid;\n"
                                       "}")
        self.input_email.setInputMethodHints(QtCore.Qt.ImhNone)
        self.input_email.setText("")
        self.input_email.setMaxLength(100)
        self.input_email.setCursorPosition(0)
        self.input_email.setReadOnly(False)
        self.input_email.setObjectName("input_email")
        self.gridLayout_4.addWidget(self.input_email, 1, 0, 1, 1)
        self.input_password_2 = QtWidgets.QLineEdit(self.gridWidget)
        self.input_password_2.setEchoMode(
            QtWidgets.QLineEdit.EchoMode.Password)
        self.input_password_2.setMinimumSize(QtCore.QSize(400, 50))
        self.input_password_2.setMaximumSize(QtCore.QSize(400, 50))
        self.input_password_2.setStyleSheet(
            "QLineEdit {\n"
            "        padding-left:10px;\n"
            "    background-color:white;\n"
            "    font: 9pt \"Eras Medium ITC\";\n"
            "    color:2f2e41;\n"
            "    border-style: solid;\n"
            "    border-width: 2px;\n"
            "    border-radius: 10px;\n"
            "    border-color:#cccccc;\n"
            "\n"
            "    }\n"
            "\n"
            "QLineEdit:focus {\n"
            "    border-color:#2f2e41;\n"
            "    border-style:solid;\n"
            "}")
        self.input_password_2.setInputMethodHints(QtCore.Qt.ImhNone)
        self.input_password_2.setText("")
        self.input_password_2.setMaxLength(16)
        self.input_password_2.setCursorPosition(0)
        self.input_password_2.setReadOnly(False)
        self.input_password_2.setObjectName("input_password_2")
        self.gridLayout_4.addWidget(self.input_password_2, 3, 0, 1, 1)
        self.input_password = QtWidgets.QLineEdit(self.gridWidget)
        self.input_password.setEchoMode(QtWidgets.QLineEdit.EchoMode.Password)
        self.input_password.setMinimumSize(QtCore.QSize(400, 50))
        self.input_password.setMaximumSize(QtCore.QSize(400, 50))
        self.input_password.setStyleSheet(
            "QLineEdit {\n"
            "        padding-left:10px;\n"
            "    background-color:white;\n"
            "    font: 9pt \"Eras Medium ITC\";\n"
            "    color:2f2e41;\n"
            "    border-style: solid;\n"
            "    border-width: 2px;\n"
            "    border-radius: 10px;\n"
            "    border-color:#cccccc;\n"
            "\n"
            "    }\n"
            "\n"
            "QLineEdit:focus {\n"
            "    border-color:#2f2e41;\n"
            "    border-style:solid;\n"
            "}")
        self.input_password.setInputMethodHints(QtCore.Qt.ImhNone)
        self.input_password.setText("")
        self.input_password.setMaxLength(16)
        self.input_password.setCursorPosition(0)
        self.input_password.setReadOnly(False)
        self.input_password.setObjectName("input_password")
        self.gridLayout_4.addWidget(self.input_password, 2, 0, 1, 1)
        self.input_username = QtWidgets.QLineEdit(self.gridWidget)
        self.input_username.setMinimumSize(QtCore.QSize(400, 50))
        self.input_username.setMaximumSize(QtCore.QSize(400, 50))
        self.input_username.setStyleSheet(
            "QLineEdit {\n"
            "    padding-left:10px;\n"
            "    background-color:white;\n"
            "    font: 9pt \"Eras Medium ITC\";\n"
            "    color:2f2e41;\n"
            "    border-style: solid;\n"
            "    border-width: 2px;\n"
            "    border-radius: 10px;\n"
            "    border-color:#cccccc;\n"
            "\n"
            "    }\n"
            "\n"
            "QLineEdit:focus {\n"
            "    border-color:#2f2e41;\n"
            "    border-style:solid;\n"
            "}")
        self.input_username.setText("")
        self.input_username.setFrame(True)
        self.input_username.setCursorPosition(0)
        self.input_username.setCursorMoveStyle(QtCore.Qt.LogicalMoveStyle)
        self.input_username.setObjectName("input_username")
        self.gridLayout_4.addWidget(self.input_username, 0, 0, 1, 1)
        self.verticalLayout_6.addWidget(self.gridWidget)
        self.output_message = QtWidgets.QLabel(self.verticalWidget1)
        self.output_message.setMinimumSize(QtCore.QSize(400, 50))
        self.output_message.setMaximumSize(QtCore.QSize(400, 50))
        self.output_message.setStyleSheet(
            "QLabel {\n"
            "    font: 10pt \"Eras Medium ITC\";\n"
            "    }")
        self.output_message.setObjectName("output_message")
        self.output_message.setAlignment(QtCore.Qt.AlignCenter)
        self.output_message.setTextFormat(QtCore.Qt.RichText)
        self.verticalLayout_6.addWidget(self.output_message)
        self.line = QtWidgets.QFrame(self.verticalWidget1)
        self.line.setMinimumSize(QtCore.QSize(421, 3))
        self.line.setMaximumSize(QtCore.QSize(421, 3))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.verticalLayout_6.addWidget(self.line)
        self.button_group = QtWidgets.QWidget(self.verticalWidget1)
        self.button_group.setMinimumSize(QtCore.QSize(421, 81))
        self.button_group.setMaximumSize(QtCore.QSize(421, 81))
        self.button_group.setObjectName("button_group")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.button_group)
        self.gridLayout_2.setContentsMargins(1, -1, -1, -1)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.back_home = QtWidgets.QPushButton(self.button_group)
        self.back_home.clicked.connect(self.home_btn)
        self.back_home.clicked.connect(SigninWindow.close)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum,
                                           QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.back_home.sizePolicy().hasHeightForWidth())
        self.back_home.setSizePolicy(sizePolicy)
        self.back_home.setMinimumSize(QtCore.QSize(166, 49))
        self.back_home.setMaximumSize(QtCore.QSize(166, 49))
        self.back_home.setStyleSheet("QPushButton {\n"
                                     "    background-color:#3f3d56;\n"
                                     "    font: 10pt \"Eras Medium ITC\";\n"
                                     "    color:white;\n"
                                     "    border-style:solid;\n"
                                     "    border-width: 3px;\n"
                                     "    border-radius: 20px;\n"
                                     "    border-color: beige;\n"
                                     "\n"
                                     "    }\n"
                                     "\n"
                                     "QPushButton:hover {\n"
                                     "    background-color:#f2f2f2;\n"
                                     "    color:#3f3d56;\n"
                                     "    border-color:#3f3d56;\n"
                                     "    border-style: outset;\n"
                                     "    font-weight:bold;\n"
                                     "}")
        self.back_home.setAutoDefault(False)
        self.back_home.setDefault(False)
        self.back_home.setFlat(False)
        self.back_home.setObjectName("back_home")
        self.gridLayout_2.addWidget(self.back_home, 0, 3, 1, 1)
        self.sign_in = QtWidgets.QPushButton(self.button_group)
        self.sign_in.clicked.connect(self.sign_in_click)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored,
                                           QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.sign_in.sizePolicy().hasHeightForWidth())
        self.sign_in.setSizePolicy(sizePolicy)
        self.sign_in.setMinimumSize(QtCore.QSize(167, 49))
        self.sign_in.setMaximumSize(QtCore.QSize(167, 49))
        self.sign_in.setStyleSheet("QPushButton {\n"
                                   "    background-color:#564fcc;\n"
                                   "    font: 10pt \"Eras Medium ITC\";\n"
                                   "    color:white;\n"
                                   "    border-style: outset;\n"
                                   "    border-width: 3px;\n"
                                   "    border-radius: 20px;\n"
                                   "    border-color: beige;\n"
                                   "\n"
                                   "    }\n"
                                   "\n"
                                   "QPushButton:hover {\n"
                                   "    background-color:#f2f2f2;\n"
                                   "    color:#6c63ff;\n"
                                   "    border-color:#6c63ff;\n"
                                   "    border-style:outset;\n"
                                   "    font-weight:bold;\n"
                                   "}")
        self.sign_in.setObjectName("sign_in")
        self.gridLayout_2.addWidget(self.sign_in, 0, 2, 1, 1)
        self.verticalLayout_6.addWidget(self.button_group)
        self.horizontalLayout_2.addWidget(self.verticalWidget1)
        self.verticalLayout.addWidget(self.horizontalWidget)
        self.gridLayout_3.addWidget(self.verticalWidget, 0, 0, 1, 1)
        SigninWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(SigninWindow)
        QtCore.QMetaObject.connectSlotsByName(SigninWindow)

    def retranslateUi(self, SigninWindow):
        _translate = QtCore.QCoreApplication.translate
        SigninWindow.setWindowTitle(_translate("SigninWindow", "MainWindow"))
        self.sign_in_title.setText(
            _translate(
                "SigninWindow",
                "<html><head/><body><p align=\"center\"><span style=\" font-size:22pt;\">Sign In</span></p></body></html>"
            ))
        self.input_email.setPlaceholderText(
            _translate("SigninWindow", " Enter Email"))
        self.input_password_2.setPlaceholderText(
            _translate("SigninWindow", " Confirme Password"))
        self.input_password.setPlaceholderText(
            _translate("SigninWindow", " Enter Password"))
        self.input_username.setPlaceholderText(
            _translate("SigninWindow", " Enter Username"))
        self.output_message.setText(
            _translate(
                "SigninWindow",
                "<html><head/><body><p align=\"center\">message</p></body></html>"
            ))
        self.back_home.setText(_translate("SigninWindow", "Back"))
        self.sign_in.setText(_translate("SigninWindow", "Sign in"))
        self.output_message.setText("")

    def sign_in_click(self):

        self.output_message.setStyleSheet("color: black")

        with open('py/Client_File.txt') as file_client:

            lines = file_client.readlines()

        client_list = []

        for line in lines:

            client_list.append(line.strip())

        username = self.input_username.text()
        email = self.input_email.text()
        password = self.input_password.text()
        password_confirm = self.input_password_2.text()

        if username == "" or password == "" or email == "" or password_confirm == "":

            self.output_message.setText("please fill all the fields")

        if username != "" and password != "" and email != "" and password_confirm != "":

            username_exists = False
            email_exists = False

            for combo in client_list:

                values = combo.strip().split(',')
                username_used = values[0]
                email_used = values[1]

                if username == username_used:
                    username_exists = True

                if email == email_used:
                    email_exists = True

            if (username_exists == True) or (email_exists == True):

                if username_exists == True:

                    self.output_message.setText("username already in use")

                elif email_exists == True:

                    self.output_message.setText("email already in use")

            elif (username_exists == False) and (email_exists == False):

                username = self.input_username.text()
                password = self.input_password.text()

                email_tage = "@" and "."
                symbols = "#$%.,;:/\ "
                special_caracters = False
                email_caracters = False
                password_minimum_lenght = False
                password_match = True

                for char in username:
                    if char in symbols:
                        special_caracters = True
                        self.output_message.setText(
                            "space and special caracters ( # $ % . , ; : /) are invalide"
                        )
                        self.output_message.setStyleSheet("color: red")

                for char in email:
                    if char in email_tage:
                        email_caracters = True
                    else:
                        self.output_message.setText("please set a valid email")
                        self.output_message.setStyleSheet("color: red")

                if len(password) < 6:
                    password_minimum_lenght = True
                    self.output_message.setText(
                        "Invalid password, Please enter a 6 character long password"
                    )
                    self.output_message.setStyleSheet("color: red")

                if password != password_confirm:

                    password_match = False
                    self.output_message.setText(
                        "the confirmation password did not match the password")
                    self.output_message.setStyleSheet("color: red")

                if (special_caracters
                        == False) and (password_minimum_lenght == False) and (
                            password_match == True) and (email_caracters
                                                         == True):

                    client = username + "," + email + "," + password

                    client_list.append(client)

                    self.input_username.setText("")
                    self.input_password.setText("")
                    self.input_email.setText("")
                    self.input_password_2.setText("")

                    self.output_message.setText("account created successfully")
                    self.output_message.setStyleSheet("color: green")

                    self.sign_in_success()

        with open('py/Client_File.txt', 'w') as file_client:

            for item in client_list:

                file_client.write(item + '\n')


import qrc_img

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    SigninWindow = QtWidgets.QMainWindow()
    ui = Ui_SigninWindow()
    ui.setupUi(SigninWindow)
    SigninWindow.show()
    sys.exit(app.exec_())
