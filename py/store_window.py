# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'store_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_StoreWindow(object):

    def log_off(self):

        from login_window import Ui_LoginWindow
        self.LoginWindow = QtWidgets.QMainWindow()
        self.ui = Ui_LoginWindow()
        self.ui.setupUi(self.LoginWindow)
        self.LoginWindow.show()
        

    def setupUi(self, StoreWindow):
        StoreWindow.setObjectName("StoreWindow")
        StoreWindow.resize(1216, 614)
        StoreWindow.setAutoFillBackground(False)
        StoreWindow.setStyleSheet("background-color:white;")
        StoreWindow.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.centralwidget = QtWidgets.QWidget(StoreWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        spacerItem = QtWidgets.QSpacerItem(40, 20,
                                           QtWidgets.QSizePolicy.Expanding,
                                           QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem)
        self.verticalLayout_6 = QtWidgets.QVBoxLayout()
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.sign_in_title = QtWidgets.QLabel(self.centralwidget)
        self.sign_in_title.setMinimumSize(QtCore.QSize(1166, 104))
        self.sign_in_title.setMaximumSize(QtCore.QSize(1166, 104))
        self.sign_in_title.setStyleSheet(
            "QLabel {\n"
            "    background-color:#6c63ff;\n"
            "    font: 22pt \"Eras Medium ITC\";\n"
            "    color:white;\n"
            "\n"
            "    }\n"
            "")
        self.sign_in_title.setObjectName("sign_in_title")
        self.verticalLayout_6.addWidget(self.sign_in_title)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout()
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.input_product = QtWidgets.QLineEdit(self.centralwidget)
        self.input_product.setMinimumSize(QtCore.QSize(400, 50))
        self.input_product.setMaximumSize(QtCore.QSize(400, 50))
        self.input_product.setStyleSheet("QLineEdit {\n"
                                         "    padding-left:10px;\n"
                                         "    background-color:white;\n"
                                         "    font: 9pt \"Eras Medium ITC\";\n"
                                         "    color:2f2e41;\n"
                                         "    border-style: solid;\n"
                                         "    border-width: 2px;\n"
                                         "    border-radius: 10px;\n"
                                         "    border-color:#cccccc;\n"
                                         "\n"
                                         "    }\n"
                                         "\n"
                                         "QLineEdit:focus {\n"
                                         "    border-color:#2f2e41;\n"
                                         "    border-style:solid;\n"
                                         "}")
        self.input_product.setText("")
        self.input_product.setFrame(True)
        self.input_product.setCursorPosition(0)
        self.input_product.setCursorMoveStyle(QtCore.Qt.LogicalMoveStyle)
        self.input_product.setObjectName("input_product")
        self.horizontalLayout.addWidget(self.input_product)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20,
                                            QtWidgets.QSizePolicy.Expanding,
                                            QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem1)
        self.find = QtWidgets.QPushButton(self.centralwidget)
        self.find.clicked.connect(self.find_product)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum,
                                           QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.find.sizePolicy().hasHeightForWidth())
        self.find.setSizePolicy(sizePolicy)
        self.find.setMinimumSize(QtCore.QSize(166, 49))
        self.find.setMaximumSize(QtCore.QSize(166, 49))
        self.find.setStyleSheet("QPushButton {\n"
                                "    background-color:#564fcc;\n"
                                "    font: 10pt \"Eras Medium ITC\";\n"
                                "    color:white;\n"
                                "    border-style: outset;\n"
                                "    border-width: 3px;\n"
                                "    border-radius: 20px;\n"
                                "    border-color: beige;\n"
                                "\n"
                                "    }\n"
                                "\n"
                                "QPushButton:hover {\n"
                                "    background-color:#f2f2f2;\n"
                                "    color:#6c63ff;\n"
                                "    border-color:#6c63ff;\n"
                                "    border-style:outset;\n"
                                "    font-weight:bold;\n"
                                "}")
        self.find.setAutoDefault(False)
        self.find.setDefault(False)
        self.find.setFlat(False)
        self.find.setObjectName("find")
        self.horizontalLayout.addWidget(self.find)
        self.verticalLayout.addLayout(self.horizontalLayout)
        self.product_list_widget = QtWidgets.QListWidget(self.centralwidget)
        self.product_list_widget.clicked.connect(self.fill_info)
        self.product_list_widget.setMinimumSize(QtCore.QSize(580, 161))
        self.product_list_widget.setMaximumSize(QtCore.QSize(580, 161))
        self.product_list_widget.setStyleSheet(
            "#listWidget {\n"
            "    padding-left:10px;\n"
            "    background-color:white;\n"
            "    font: 9pt \"Eras Medium ITC\";\n"
            "    color:2f2e41;\n"
            "    border-style: solid;\n"
            "    border-width: 2px;\n"
            "    border-radius: 10px;\n"
            "    border-color:#cccccc;\n"
            "\n"
            "    }")
        self.product_list_widget.setObjectName("product_list_widget")
        self.verticalLayout.addWidget(self.product_list_widget)
        self.descreption_output = QtWidgets.QTextBrowser(self.centralwidget)
        self.descreption_output.setAlignment(QtCore.Qt.AlignCenter)
        self.descreption_output.setMinimumSize(QtCore.QSize(581, 101))
        self.descreption_output.setMaximumSize(QtCore.QSize(581, 101))
        self.descreption_output.setStyleSheet(
            "\n"
            "    padding-left:10px;\n"
            "    background-color:white;\n"
            "    font: 10pt \"Eras Medium ITC\";\n"
            "    color:2f2e41;\n"
            "    border-style: solid;\n"
            "    border-width: 2px;\n"
            "    border-radius: 10px;\n"
            "    border-color:#cccccc;\n"
            "")
        self.descreption_output.setObjectName("descreption_output")
        self.verticalLayout.addWidget(self.descreption_output)
        self.price_output = QtWidgets.QTextBrowser(self.centralwidget)
        self.price_output.setAlignment(QtCore.Qt.AlignCenter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding,
                                           QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.price_output.sizePolicy().hasHeightForWidth())
        self.price_output.setSizePolicy(sizePolicy)
        self.price_output.setMinimumSize(QtCore.QSize(581, 41))
        self.price_output.setMaximumSize(QtCore.QSize(581, 41))
        self.price_output.setAutoFillBackground(False)
        self.price_output.setStyleSheet("\n"
                                        "    padding-left:10px;\n"
                                        "    background-color:white;\n"
                                        "    font: 14pt \"Eras Medium ITC\";\n"
                                        "    color:2f2e41;\n"
                                        "    border-style: solid;\n"
                                        "    border-width: 2px;\n"
                                        "    border-radius: 10px;\n"
                                        "    border-color:#cccccc;\n"
                                        "")
        self.price_output.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.price_output.setLineWidth(1)
        self.price_output.setVerticalScrollBarPolicy(
            QtCore.Qt.ScrollBarAlwaysOff)
        self.price_output.setHorizontalScrollBarPolicy(
            QtCore.Qt.ScrollBarAlwaysOff)
        self.price_output.setAutoFormatting(QtWidgets.QTextEdit.AutoNone)
        self.price_output.setUndoRedoEnabled(False)
        self.price_output.setLineWrapMode(QtWidgets.QTextEdit.NoWrap)
        self.price_output.setLineWrapColumnOrWidth(0)
        self.price_output.setCursorWidth(1)
        self.price_output.setObjectName("price_output")
        self.verticalLayout.addWidget(self.price_output)
        self.verticalLayout_4.addLayout(self.verticalLayout)
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.verticalWidget_2 = QtWidgets.QWidget(self.centralwidget)
        self.verticalWidget_2.setMinimumSize(QtCore.QSize(581, 79))
        self.verticalWidget_2.setMaximumSize(QtCore.QSize(581, 79))
        self.verticalWidget_2.setObjectName("verticalWidget_2")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.verticalWidget_2)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.line = QtWidgets.QFrame(self.verticalWidget_2)
        self.line.setMinimumSize(QtCore.QSize(579, 3))
        self.line.setMaximumSize(QtCore.QSize(579, 3))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.verticalLayout_3.addWidget(self.line)
        self.output_message = QtWidgets.QLabel(self.verticalWidget_2)
        self.output_message.setMinimumSize(QtCore.QSize(581, 51))
        self.output_message.setMaximumSize(QtCore.QSize(581, 51))
        self.output_message.setStyleSheet(
            "\n"
            "    font: 10pt \"Eras Medium ITC\";")
        self.output_message.setTextFormat(QtCore.Qt.RichText)
        self.output_message.setAlignment(QtCore.Qt.AlignCenter)
        self.output_message.setWordWrap(False)
        self.output_message.setObjectName("output_message")
        self.verticalLayout_3.addWidget(self.output_message)
        self.line_2 = QtWidgets.QFrame(self.verticalWidget_2)
        self.line_2.setMinimumSize(QtCore.QSize(579, 3))
        self.line_2.setMaximumSize(QtCore.QSize(579, 3))
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.verticalLayout_3.addWidget(self.line_2)
        self.horizontalLayout_3.addWidget(self.verticalWidget_2)
        self.verticalLayout_4.addLayout(self.horizontalLayout_3)
        self.horizontalLayout_4.addLayout(self.verticalLayout_4)
        self.verticalWidget_3 = QtWidgets.QWidget(self.centralwidget)
        self.verticalWidget_3.setObjectName("verticalWidget_3")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.verticalWidget_3)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.label = QtWidgets.QLabel(self.verticalWidget_3)
        self.label.setMinimumSize(QtCore.QSize(571, 391))
        self.label.setMaximumSize(QtCore.QSize(571, 391))
        self.label.setText("")
        self.label.setPixmap(
            QtGui.QPixmap(":/store/undraw_Shopping_re_hdd9.png"))
        self.label.setScaledContents(True)
        self.label.setObjectName("label")
        self.verticalLayout_5.addWidget(self.label)
        self.horizontalWidget_2 = QtWidgets.QWidget(self.verticalWidget_3)
        self.horizontalWidget_2.setMinimumSize(QtCore.QSize(571, 65))
        self.horizontalWidget_2.setMaximumSize(QtCore.QSize(571, 65))
        self.horizontalWidget_2.setObjectName("horizontalWidget_2")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(
            self.horizontalWidget_2)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.buy = QtWidgets.QPushButton(self.horizontalWidget_2)
        self.buy.clicked.connect(StoreWindow.close)
        self.buy.clicked.connect(self.buy_product)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred,
                                           QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.buy.sizePolicy().hasHeightForWidth())
        self.buy.setSizePolicy(sizePolicy)
        self.buy.setMinimumSize(QtCore.QSize(166, 49))
        self.buy.setMaximumSize(QtCore.QSize(166, 49))
        self.buy.setToolTip("")
        self.buy.setAutoFillBackground(False)
        self.buy.setStyleSheet("QPushButton {\n"
                               "    background-color:#564fcc;\n"
                               "    font: 10pt \"Eras Medium ITC\";\n"
                               "    color:white;\n"
                               "    border-style: outset;\n"
                               "    border-width: 3px;\n"
                               "    border-radius: 20px;\n"
                               "    border-color: beige;\n"
                               "\n"
                               "    }\n"
                               "\n"
                               "QPushButton:hover {\n"
                               "    background-color:#f2f2f2;\n"
                               "    color:#6c63ff;\n"
                               "    border-color:#6c63ff;\n"
                               "    border-style:outset;\n"
                               "    font-weight:bold;\n"
                               "}")
        self.buy.setCheckable(False)
        self.buy.setAutoDefault(False)
        self.buy.setDefault(False)
        self.buy.setFlat(False)
        self.buy.setObjectName("buy")
        self.horizontalLayout_2.addWidget(self.buy)
        self.add_to_cart = QtWidgets.QPushButton(self.horizontalWidget_2)
        self.add_to_cart.clicked.connect(self.add_to_cart_product)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred,
                                           QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.add_to_cart.sizePolicy().hasHeightForWidth())
        self.add_to_cart.setSizePolicy(sizePolicy)
        self.add_to_cart.setMinimumSize(QtCore.QSize(166, 49))
        self.add_to_cart.setMaximumSize(QtCore.QSize(166, 49))
        self.add_to_cart.setAutoFillBackground(False)
        self.add_to_cart.setStyleSheet("QPushButton {\n"
                                       "    background-color:#564fcc;\n"
                                       "    font: 10pt \"Eras Medium ITC\";\n"
                                       "    color:white;\n"
                                       "    border-style: outset;\n"
                                       "    border-width: 3px;\n"
                                       "    border-radius: 20px;\n"
                                       "    border-color: beige;\n"
                                       "\n"
                                       "    }\n"
                                       "\n"
                                       "QPushButton:hover {\n"
                                       "    background-color:#f2f2f2;\n"
                                       "    color:#6c63ff;\n"
                                       "    border-color:#6c63ff;\n"
                                       "    border-style:outset;\n"
                                       "    font-weight:bold;\n"
                                       "}")
        self.add_to_cart.setCheckable(False)
        self.add_to_cart.setAutoDefault(False)
        self.add_to_cart.setDefault(False)
        self.add_to_cart.setFlat(False)
        self.add_to_cart.setObjectName("add_to_cart")
        self.horizontalLayout_2.addWidget(self.add_to_cart)
        self.back_home = QtWidgets.QPushButton(self.horizontalWidget_2)

        self.back_home.clicked.connect(self.log_off)
        self.back_home.clicked.connect(StoreWindow.close)

        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum,
                                           QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.back_home.sizePolicy().hasHeightForWidth())
        self.back_home.setSizePolicy(sizePolicy)
        self.back_home.setMinimumSize(QtCore.QSize(166, 49))
        self.back_home.setMaximumSize(QtCore.QSize(166, 49))
        self.back_home.setStyleSheet("QPushButton {\n"
                                     "    background-color:#3f3d56;\n"
                                     "    font: 10pt \"Eras Medium ITC\";\n"
                                     "    color:white;\n"
                                     "    border-style:solid;\n"
                                     "    border-width: 3px;\n"
                                     "    border-radius: 20px;\n"
                                     "    border-color: beige;\n"
                                     "\n"
                                     "    }\n"
                                     "\n"
                                     "QPushButton:hover {\n"
                                     "    background-color:#f2f2f2;\n"
                                     "    color:#3f3d56;\n"
                                     "    border-color:#3f3d56;\n"
                                     "    border-style: outset;\n"
                                     "    font-weight:bold;\n"
                                     "}")
        self.back_home.setAutoDefault(False)
        self.back_home.setDefault(False)
        self.back_home.setFlat(False)
        self.back_home.setObjectName("back_home")
        self.horizontalLayout_2.addWidget(self.back_home)
        self.verticalLayout_5.addWidget(self.horizontalWidget_2)
        self.horizontalLayout_4.addWidget(self.verticalWidget_3)
        self.verticalLayout_6.addLayout(self.horizontalLayout_4)
        self.horizontalLayout_6.addLayout(self.verticalLayout_6)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20,
                                            QtWidgets.QSizePolicy.Expanding,
                                            QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem2)
        self.gridLayout_2.addLayout(self.horizontalLayout_6, 0, 0, 1, 1)
        StoreWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(StoreWindow)
        QtCore.QMetaObject.connectSlotsByName(StoreWindow)

    def retranslateUi(self, StoreWindow):
        _translate = QtCore.QCoreApplication.translate
        StoreWindow.setWindowTitle(_translate("StoreWindow", "MainWindow"))
        self.sign_in_title.setText(
            _translate(
                "StoreWindow",
                "<html><head/><body><p align=\"center\"><span style=\" font-weight:600;\">RAYESTORE</span></p></body></html>"
            ))
        self.input_product.setPlaceholderText(
            _translate("StoreWindow", " Enter Product"))
        self.find.setText(_translate("StoreWindow", "Find"))
        self.descreption_output.setHtml(
            _translate(
                "StoreWindow",
                "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                "p, li { white-space: pre-wrap; }\n"
                "</style></head><body style=\" font-family:\'Eras Medium ITC\'; font-size:10pt; font-weight:400; font-style:normal;\">\n"
                "<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"
            ))
        self.price_output.setHtml(
            _translate(
                "StoreWindow",
                "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
                "<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
                "p, li { white-space: pre-wrap; }\n"
                "</style></head><body style=\" font-family:\'Eras Medium ITC\'; font-size:14pt; font-weight:400; font-style:normal;\">\n"
                "<p align=\"center\" style=\"-qt-paragraph-type:empty; margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"
            ))
        self.output_message.setText(
            _translate(
                "StoreWindow",
                "<html><head/><body><p align=\"center\"><br/></p></body></html>"
            ))
        self.buy.setText(_translate("StoreWindow", "Buy"))
        self.add_to_cart.setText(_translate("StoreWindow", "Add to cart 🛒"))
        self.back_home.setText(_translate("StoreWindow", "Log Off"))

    def find_product(self):

        self.output_message.setStyleSheet("color: black")
        self.product_list_widget.clear()
        self.descreption_output.clear()
        self.price_output.clear()

        product = self.input_product.text()

        product_found = False

        with open("py/Product_File.txt", "r") as file_product:

            lines = file_product.readlines()

        product_list = []

        for line in lines:

            product_list.append(line.strip())

        if product == "":

            self.output_message.setText("please enter product name")

        elif product != "":

            for combo in product_list:

                values = combo.strip().split(',')
                product_found = values[0]
                description_found = values[1]
                price_found = values[2]

                if (product_found == product):

                    self.product_list_widget.addItem(description_found)
                    self.output_message.setText("your product has been found")
                    self.output_message.setStyleSheet("color: green")

                if (product_found != product):

                    self.output_message.setText(
                        "sorry we c'ant find your product")
                    self.output_message.setStyleSheet("color: black")

    def fill_info(self):

        with open("py/Product_File.txt", "r") as file_product:

            lines = file_product.readlines()

        product_list = []

        for line in lines:

            product_list.append(line.strip())

        for combo in product_list:

            values = combo.strip().split(',')
            product_found = values[0]
            description_found = values[1]
            price_found = values[2]

            for item in range(self.product_list_widget.count()):

                clicked = self.product_list_widget.currentRow()

                description = self.product_list_widget.item(clicked).text()

                if description == description_found:

                    self.descreption_output.setText(description_found)
                    self.descreption_output.setAlignment(QtCore.Qt.AlignCenter)
                    self.price_output.setText(price_found)
                    self.price_output.setAlignment(QtCore.Qt.AlignCenter)

    def buy_product(self):

        self.save_cache()

        from payment_window import Ui_PaymentWindow
        self.PaymentWindow = QtWidgets.QMainWindow()
        self.ui = Ui_PaymentWindow()
        self.ui.setupUi(self.PaymentWindow)
        self.PaymentWindow.show()  

    def save_cache(self):

        product_cache = (self.input_product.text() + "-" + self.descreption_output.toPlainText())
        price_per_unite_cache = self.price_output.toPlainText()

        with open('py/Cache_File.txt') as cache_file:
        
            lines = cache_file.readlines()
            
            cache_list = []
            
        for line in lines:
            
            cache_list.append(line.strip())

        for combo in range(len(cache_list)):
            
            cache = cache_list[combo].split(",")
            
            cache[1] = product_cache
            cache[2] = price_per_unite_cache
            
            cache_list[combo] = ",".join(cache)
        
        with open('py/Cache_File.txt', 'w') as cache_file:

            for item in cache_list:

                cache_file.write(item + '\n')



        print(cache_list)

    def add_to_cart_product(self):
        pass


import qrc_img

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    StoreWindow = QtWidgets.QMainWindow()
    ui = Ui_StoreWindow()
    ui.setupUi(StoreWindow)
    StoreWindow.show()
    sys.exit(app.exec_())
