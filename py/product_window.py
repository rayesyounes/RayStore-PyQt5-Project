# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'product_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_ProductWindow(object):

    def log_off(self):

        from login_window import Ui_LoginWindow
        self.LoginWindow = QtWidgets.QMainWindow()
        self.ui = Ui_LoginWindow()
        self.ui.setupUi(self.LoginWindow)
        self.LoginWindow.show()

    def setupUi(self, ProductWindow):
        ProductWindow.setObjectName("ProductWindow")
        ProductWindow.resize(1212, 600)
        ProductWindow.setStyleSheet("background-color:white;")
        self.centralwidget = QtWidgets.QWidget(ProductWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.verticalLayout_11 = QtWidgets.QVBoxLayout()
        self.verticalLayout_11.setObjectName("verticalLayout_11")
        self.sign_in_title = QtWidgets.QLabel(self.centralwidget)
        self.sign_in_title.setMinimumSize(QtCore.QSize(1192, 110))
        self.sign_in_title.setMaximumSize(QtCore.QSize(1192, 110))
        self.sign_in_title.setStyleSheet(
            "QLabel {\n"
            "    background-color:#6c63ff;\n"
            "    font: 22pt \"Eras Medium ITC\";\n"
            "    color:white;\n"
            "\n"
            "    }\n"
            "")
        self.sign_in_title.setObjectName("sign_in_title")
        self.verticalLayout_11.addWidget(self.sign_in_title)
        self.horizontalWidget_3 = QtWidgets.QWidget(self.centralwidget)
        self.horizontalWidget_3.setMinimumSize(QtCore.QSize(1095, 413))
        self.horizontalWidget_3.setMaximumSize(QtCore.QSize(1095, 413))
        self.horizontalWidget_3.setObjectName("horizontalWidget_3")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(
            self.horizontalWidget_3)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.gridLayout_6 = QtWidgets.QGridLayout()
        self.gridLayout_6.setObjectName("gridLayout_6")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.product_input = QtWidgets.QLineEdit(self.horizontalWidget_3)
        self.product_input.setMinimumSize(QtCore.QSize(301, 51))
        self.product_input.setMaximumSize(QtCore.QSize(301, 51))
        self.product_input.setStyleSheet("QLineEdit {\n"
                                         "    padding-left:10px;\n"
                                         "    background-color:white;\n"
                                         "    font: 9pt \"Eras Medium ITC\";\n"
                                         "    color:2f2e41;\n"
                                         "    border-style: solid;\n"
                                         "    border-width: 2px;\n"
                                         "    border-radius: 10px;\n"
                                         "    border-color:#cccccc;\n"
                                         "\n"
                                         "    }\n"
                                         "\n"
                                         "QLineEdit:focus {\n"
                                         "    border-color:#2f2e41;\n"
                                         "    border-style:solid;\n"
                                         "}")
        self.product_input.setObjectName("product_input")
        self.horizontalLayout_3.addWidget(self.product_input)
        self.price_input = QtWidgets.QLineEdit(self.horizontalWidget_3)
        self.price_input.setMinimumSize(QtCore.QSize(191, 51))
        self.price_input.setMaximumSize(QtCore.QSize(191, 51))
        self.price_input.setStyleSheet("QLineEdit {\n"
                                       "    padding-left:10px;\n"
                                       "    background-color:white;\n"
                                       "    font: 9pt \"Eras Medium ITC\";\n"
                                       "    color:2f2e41;\n"
                                       "    border-style: solid;\n"
                                       "    border-width: 2px;\n"
                                       "    border-radius: 10px;\n"
                                       "    border-color:#cccccc;\n"
                                       "\n"
                                       "    }\n"
                                       "\n"
                                       "QLineEdit:focus {\n"
                                       "    border-color:#2f2e41;\n"
                                       "    border-style:solid;\n"
                                       "}")
        self.price_input.setObjectName("price_input")
        self.horizontalLayout_3.addWidget(self.price_input)
        self.gridLayout_6.addLayout(self.horizontalLayout_3, 2, 0, 1, 1)
        self.gridLayout_4 = QtWidgets.QGridLayout()
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.line = QtWidgets.QFrame(self.horizontalWidget_3)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.gridLayout_4.addWidget(self.line, 2, 0, 1, 1)
        self.output_message = QtWidgets.QLabel(self.horizontalWidget_3)
        self.output_message.setAlignment(QtCore.Qt.AlignCenter)
        self.output_message.setTextFormat(QtCore.Qt.RichText)
        self.output_message.setMinimumSize(QtCore.QSize(502, 51))
        self.output_message.setMaximumSize(QtCore.QSize(502, 51))
        self.output_message.setStyleSheet(
            "QLabel {\n"
            "    font: 10pt \"Eras Medium ITC\";\n"
            "    }")
        self.output_message.setObjectName("output_message")
        self.gridLayout_4.addWidget(self.output_message, 1, 0, 1, 1)
        self.line_2 = QtWidgets.QFrame(self.horizontalWidget_3)
        self.line_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.line_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line_2.setObjectName("line_2")
        self.gridLayout_4.addWidget(self.line_2, 0, 0, 1, 1)
        self.gridLayout_6.addLayout(self.gridLayout_4, 3, 0, 1, 1)
        self.verticalLayout_9 = QtWidgets.QVBoxLayout()
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.description_input = QtWidgets.QLineEdit(self.horizontalWidget_3)
        self.description_input.setMinimumSize(QtCore.QSize(501, 51))
        self.description_input.setMaximumSize(QtCore.QSize(501, 51))
        self.description_input.setStyleSheet(
            "QLineEdit {\n"
            "    padding-left:10px;\n"
            "    background-color:white;\n"
            "    font: 9pt \"Eras Medium ITC\";\n"
            "    color:2f2e41;\n"
            "    border-style: solid;\n"
            "    border-width: 2px;\n"
            "    border-radius: 10px;\n"
            "    border-color:#cccccc;\n"
            "\n"
            "    }\n"
            "\n"
            "QLineEdit:focus {\n"
            "    border-color:#2f2e41;\n"
            "    border-style:solid;\n"
            "}")
        self.description_input.setObjectName("description_input")
        self.verticalLayout_9.addWidget(self.description_input)
        self.gridLayout_6.addLayout(self.verticalLayout_9, 0, 0, 1, 1)
        self.horizontalLayout_6.addLayout(self.gridLayout_6)
        self.label = QtWidgets.QLabel(self.horizontalWidget_3)
        self.label.setMinimumSize(QtCore.QSize(581, 411))
        self.label.setMaximumSize(QtCore.QSize(581, 411))
        self.label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label.setAutoFillBackground(False)
        self.label.setText("")
        self.label.setPixmap(
            QtGui.QPixmap(":/product_manager/undraw_New_entries_re_cffr.png"))
        self.label.setScaledContents(True)
        self.label.setObjectName("label")
        self.horizontalLayout_6.addWidget(self.label)
        self.verticalLayout_11.addWidget(self.horizontalWidget_3)
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.add = QtWidgets.QPushButton(self.centralwidget)
        self.add.clicked.connect(self.add_click)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred,
                                           QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.add.sizePolicy().hasHeightForWidth())
        self.add.setSizePolicy(sizePolicy)
        self.add.setMinimumSize(QtCore.QSize(161, 41))
        self.add.setMaximumSize(QtCore.QSize(161, 41))
        self.add.setAutoFillBackground(False)
        self.add.setStyleSheet("QPushButton {\n"
                               "    background-color:#f9f9f9;\n"
                               "    font: 10pt \"Eras Medium ITC\";\n"
                               "    color:#6c63ff;\n"
                               "    border-style: outset;\n"
                               "    border-width: 3px;\n"
                               "    border-radius: 20px;\n"
                               "    font-weight:bold;\n"
                               "    border-color:#6c63ff;\n"
                               "\n"
                               "    }\n"
                               "\n"
                               "QPushButton:hover {\n"
                               "    background-color:#1ed760;\n"
                               "    color:#f9f9f9;\n"
                               "    border-color:#1ed760;\n"
                               "    border-style:solide;\n"
                               "    font-weight:bold;\n"
                               "}")
        self.add.setCheckable(False)
        self.add.setAutoDefault(False)
        self.add.setDefault(False)
        self.add.setFlat(False)
        self.add.setObjectName("add")
        self.horizontalLayout_5.addWidget(self.add)
        self.find = QtWidgets.QPushButton(self.centralwidget)
        self.find.clicked.connect(self.find_click)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred,
                                           QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.find.sizePolicy().hasHeightForWidth())
        self.find.setSizePolicy(sizePolicy)
        self.find.setMinimumSize(QtCore.QSize(161, 41))
        self.find.setMaximumSize(QtCore.QSize(161, 41))
        self.find.setAutoFillBackground(False)
        self.find.setStyleSheet("QPushButton {\n"
                                "    background-color:#f9f9f9;\n"
                                "    font: 10pt \"Eras Medium ITC\";\n"
                                "    color:#6c63ff;\n"
                                "    border-style: outset;\n"
                                "    border-width: 3px;\n"
                                "    border-radius: 20px;\n"
                                "    font-weight:bold;\n"
                                "    border-color:#6c63ff;\n"
                                "\n"
                                "    }\n"
                                "\n"
                                "QPushButton:hover {\n"
                                "    background-color:#6c63ff;\n"
                                "    color:#f9f9f9;\n"
                                "    border-color:#6c63ff;\n"
                                "    border-style:solide;\n"
                                "    font-weight:bold;\n"
                                "}")
        self.find.setCheckable(False)
        self.find.setAutoDefault(False)
        self.find.setDefault(False)
        self.find.setFlat(False)
        self.find.setObjectName("find")
        self.horizontalLayout_5.addWidget(self.find)
        self.delete_ = QtWidgets.QPushButton(self.centralwidget)
        self.delete_.clicked.connect(self.delete_click)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred,
                                           QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(
            self.delete_.sizePolicy().hasHeightForWidth())
        self.delete_.setSizePolicy(sizePolicy)
        self.delete_.setMinimumSize(QtCore.QSize(161, 41))
        self.delete_.setMaximumSize(QtCore.QSize(161, 41))
        self.delete_.setAutoFillBackground(False)
        self.delete_.setStyleSheet("QPushButton {\n"
                                   "    background-color:#f9f9f9;\n"
                                   "    font: 10pt \"Eras Medium ITC\";\n"
                                   "    color:#6c63ff;\n"
                                   "    border-radius: 20px;\n"
                                   "    border-style: outset;\n"
                                   "    border-width: 3px;\n"
                                   "    font-weight:bold;\n"
                                   "    border-color:#6c63ff;\n"
                                   "\n"
                                   "    }\n"
                                   "\n"
                                   "QPushButton:hover {\n"
                                   "    background-color:#ff0000;\n"
                                   "    color:#f9f9f9;\n"
                                   "    border-color:#ff0000;\n"
                                   "    border-style:solide;\n"
                                   "    font-weight:bold;\n"
                                   "}")
        self.delete_.setCheckable(False)
        self.delete_.setAutoDefault(False)
        self.delete_.setDefault(False)
        self.delete_.setFlat(False)
        self.delete_.setObjectName("delete_")
        self.horizontalLayout_5.addWidget(self.delete_)
        self.horizontalLayout_4.addLayout(self.horizontalLayout_5)
        spacerItem = QtWidgets.QSpacerItem(500, 20,
                                           QtWidgets.QSizePolicy.Fixed,
                                           QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem)
        self.back_home = QtWidgets.QPushButton(self.centralwidget)

        self.back_home.clicked.connect(self.log_off)
        self.back_home.clicked.connect(ProductWindow.close)

        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.back_home.sizePolicy().hasHeightForWidth())
        self.back_home.setSizePolicy(sizePolicy)
        self.back_home.setMinimumSize(QtCore.QSize(166, 49))
        self.back_home.setMaximumSize(QtCore.QSize(166, 49))
        self.back_home.setStyleSheet("QPushButton {\n"
                                     "    background-color:#3f3d56;\n"
                                     "    font: 10pt \"Eras Medium ITC\";\n"
                                     "    color:white;\n"
                                     "    border-style:solid;\n"
                                     "    border-width: 3px;\n"
                                     "    border-radius: 20px;\n"
                                     "    border-color: beige;\n"
                                     "\n"
                                     "    }\n"
                                     "\n"
                                     "QPushButton:hover {\n"
                                     "    background-color:#f2f2f2;\n"
                                     "    color:#3f3d56;\n"
                                     "    border-color:#3f3d56;\n"
                                     "    border-style: outset;\n"
                                     "    font-weight:bold;\n"
                                     "}")
        self.back_home.setAutoDefault(False)
        self.back_home.setDefault(False)
        self.back_home.setFlat(False)
        self.back_home.setObjectName("back_home")
        self.horizontalLayout_4.addWidget(self.back_home)
        self.verticalLayout_11.addLayout(self.horizontalLayout_4)
        self.gridLayout_3.addLayout(self.verticalLayout_11, 0, 0, 1, 1)
        ProductWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(ProductWindow)
        QtCore.QMetaObject.connectSlotsByName(ProductWindow)

    def retranslateUi(self, ProductWindow):
        _translate = QtCore.QCoreApplication.translate
        ProductWindow.setWindowTitle(_translate("ProductWindow", "MainWindow"))
        self.sign_in_title.setText(
            _translate(
                "ProductWindow",
                "<html><head/><body><p align=\"center\">Product Manager</p></body></html>"
            ))
        self.product_input.setPlaceholderText(
            _translate("ProductWindow", "Enter Product"))
        self.price_input.setPlaceholderText(
            _translate("ProductWindow", "Enter Price"))
        self.output_message.setText(
            _translate(
                "ProductWindow",
                "<html><head/><body><p align=\"center\"><br/></p></body></html>"
            ))
        self.description_input.setPlaceholderText(
            _translate("ProductWindow", "Enter Description"))
        self.add.setText(_translate("ProductWindow", "Add"))
        self.find.setText(_translate("ProductWindow", "Find"))
        self.delete_.setText(_translate("ProductWindow", "Delete"))
        self.back_home.setText(_translate("ProductWindow", "Log Out"))

    def add_to_database(self):

        from product_dialogue_window import Ui_Product_dialogue_Window
        self.Product_dialogue_Window = QtWidgets.QMainWindow()
        self.ui = Ui_Product_dialogue_Window()
        self.ui.setupUi(self.Product_dialogue_Window)
        self.Product_dialogue_Window.show()

    def add_click(self):

        self.output_message.setStyleSheet("color: black")

        with open('py/Product_File.txt') as file_product:

            lines = file_product.readlines()

        product_list = []

        for line in lines:

            product_list.append(line.strip())

        product = self.product_input.text()
        description = self.description_input.text()
        price = self.price_input.text()

        if product == "" or description == "" or price == "":
            self.output_message.setText("please enter all the info")

        if product != "" and description != "" and price != "":

            product_line = str(product) + "," + str(description) + "," + ("$ " + str(price))

            if product_line in product_list:
                self.output_message.setText("product is already in entred")

            if product_line not in product_list:

                product_list.append(product_line)
                self.product_input.setText("")
                self.description_input.setText("")
                self.price_input.setText("")
                self.output_message.setText(
                    "your info has been added successfully")
                self.output_message.setStyleSheet("color: green")
                self.add_to_database()

        with open('py/Product_File.txt', 'w') as file_product:

            for item in product_list:
                file_product.write(item + '\n')

    def find_click(self):

        self.output_message.setStyleSheet("color: black")

        product = self.product_input.text()
        description = self.description_input.text()
        price = self.price_input.text()

        product_line = str(product) + "," + str(description) + "," + ("$ " + str(price))
        product_found = False

        with open("py/Product_File.txt", "r") as file_product:

            lines = file_product.readlines()

            for line in lines:

                if product_line in line:
                    product_found = True

                if product == "" or description == "" or price == "":
                    self.output_message.setText("please enter all the info")

                elif (product_found == True):

                    self.output_message.setText("your product has been found")
                    self.output_message.setStyleSheet("color: green")

                else:

                    self.output_message.setText(
                        "sorry we c'ant find your product")
                    self.output_message.setStyleSheet("color: black")

    def delete_click(self):

        self.output_message.setStyleSheet("color: black")

        product = self.product_input.text()
        description = self.description_input.text()
        price = self.price_input.text()

        product_line = str(product) + "," + str(description) + "," + ("$ " + str(price))
        product_found = False

        with open("py/Product_File.txt", "r") as file_product:

            lines = file_product.readlines()

            for line in lines:

                if product_line in line:
                    product_found = True

                if product == "" or description == "" or price == "":
                    self.output_message.setText("please enter all the info")

                elif (product_found == True):

                    lines.remove(line)
                    self.output_message.setText(
                        "your info has been deleted successfully")
                    self.output_message.setStyleSheet("color: green")
                    self.product_input.setText("")
                    self.description_input.setText("")
                    self.price_input.setText("")

                else:

                    self.output_message.setText(
                        "sorry we c'ant find your product")
                    self.output_message.setStyleSheet("color: red")

        with open("py/Product_File.txt", "w") as file_product:
            file_product.writelines(lines)


import qrc_img

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    ProductWindow = QtWidgets.QMainWindow()
    ui = Ui_ProductWindow()
    ui.setupUi(ProductWindow)
    ProductWindow.show()
    sys.exit(app.exec_())
